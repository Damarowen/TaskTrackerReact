{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/Add.js","components/Footer.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","lihat","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","x","Add","tambah","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAdd","setShow","setTask","useEffect","a","fetchTasks","data","getTasks","fetch","res","json","console","log","fetchTask","url","addTask","method","headers","body","JSON","stringify","baru","deleteTask","filter","toggleReminder","toggle","updated","path","exact","render","props","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.359b4ef7.chunk.js","sourcesContent":["\r\nimport PropTypes from 'prop-types'\r\n\r\n// const Button = (props) => {\r\n\r\nconst Button = ({ color, text, onClick}) => {\r\n\r\n\r\nreturn <button onClick={onClick}\r\n style={{backgroundColor: color}} className='btn'>{text}\r\n </button>\r\n\r\n}\r\n\r\n//* default props\r\n\r\nButton.defaultProps = {\r\n    color: 'steelBlue'\r\n}\r\n\r\n//* proptypes\r\n\r\nButton.propTypes = {\r\n    text: PropTypes.string,\r\n    color: PropTypes.string,\r\n    //* click is a function\r\n    onClick: PropTypes.func\r\n}\r\n\r\nexport default Button","\r\nimport PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\n//* display none add close button when in about page\r\nimport { useLocation } from 'react-router-dom'\r\n\r\n\r\n\r\n//* const Header = (props) => {\r\nconst Header = ({ title, onAdd, lihat }) => {\r\n\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <header className='header'>\r\n            <h1>{title}</h1>\r\n            { location.pathname === '/TaskTrackerReact' &&\r\n                <Button\r\n                    color={lihat ? 'red' : 'green'}\r\n                    text={lihat ? 'Close' : 'Add'}\r\n                    onClick={onAdd} />\r\n            }\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n//* set props default\r\n\r\n\r\n\r\n\r\nHeader.defaultProps = {\r\n    title: 'Task Tracker'\r\n}\r\n\r\n\r\n\r\n//* proptypes\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nexport default Header\r\n","import {FaTimes} from 'react-icons/fa'\r\n\r\n\r\nconst Task = ({ task, onDelete, onToggle}) => {\r\n    return (\r\n        //* if task reminder true then class reminder add else empty\r\n        <div className={`task ${task.reminder ? 'reminder'  :''}`} onDoubleClick={() => onToggle(task.id)} >\r\n            <h3>\r\n            {task.text} <FaTimes  style={{color: 'red', \r\n              cursor: 'Pointer'}} onClick={() => onDelete(task.id)}/>\r\n            </h3>\r\n            <p>{task.day}</p>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from './Task'\r\n\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\r\n    return (\r\n        <>\r\n            {tasks.map((x) => (\r\n                //* must have key prop\r\n                <Task key={x.id} task={x} \r\n                onDelete={onDelete} onToggle={onToggle}/>\r\n            )\r\n\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","\r\nimport { useState } from 'react'\r\n\r\nconst Add = ({tambah}) => {\r\n\r\n    const [ text, setText] = useState(``)\r\n    const [ day, setDay] = useState('')\r\n    const [ reminder, setReminder] = useState('')\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        //*validation\r\n\r\n        if(!text){\r\n            alert('Please add a task')\r\n            return\r\n        }\r\n\r\n        tambah({ text, day,reminder})\r\n\r\n        //*clear form\r\n        setDay('')\r\n        setText('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n       \r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label>Task</label>\r\n                <input type=\"text\" placeholder='Add Task' \r\n                 value={text} onChange={(e) => setText(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className='form-control'>\r\n                <label>Day & Time </label>\r\n                <input type=\"text\" placeholder='Add Day & Time' \r\n                 value={day} onChange={(e) => setDay(e.target.value)}/>\r\n            </div>\r\n\r\n            <div className='form-control form-control-check'>\r\n                <label>Set Reminder</label>\r\n                <input type=\"checkbox\" checked={reminder}\r\n                value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n            </div>\r\n\r\n            <input type=\"submit\" \r\n            value=\"Save Task\" className='btn btb-block'/>\r\n\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default Add\r\n","//* link supaya web ga reload\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer>\r\n            <p> &copy; 2021</p>\r\n            {/* <a href=\"/about\">About</a> */}\r\n            <Link to=\"/about\">About</Link>\r\n\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","//* link supaya web ga reload\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nfunction About() {\r\n    return (\r\n        <div>\r\n            <h4> Version 1</h4> \r\n            {/* <a href=\"/\">Back</a> */}\r\n          <Link to=\"/TaskTrackerReact\">Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState, useEffect } from 'react'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\nimport Header from './components/Header'\r\nimport Tasks from './components/Tasks'\r\nimport Add from './components/Add'\r\nimport Footer from './components/Footer'\r\nimport About from './components/About'\r\n\r\n\r\n\r\nfunction App() {\r\n\r\n    //* toggle button app\r\n    const [showAdd, setShow] = useState(false)\r\n\r\n    //* nameState,function\r\n    const [tasks, setTask] = useState([])\r\n\r\n    //* useEffect hooks \r\n    //* Mengambil data dari JSON SERVER\r\n    useEffect(() => {\r\n\r\n        const getTasks = async () => {\r\n            const data = await fetchTasks()\r\n            setTask(data)\r\n        }\r\n\r\n        getTasks()\r\n\r\n    }, [])\r\n\r\n    //* for fecth data\r\n\r\n    const fetchTasks = async () => {\r\n        //* URL dari JSON SERVER\r\n        const url = 'http://localhost:5000/TUGAS'\r\n        const res = await fetch(url)\r\n        const data = await res.json()\r\n        console.log(data)\r\n\r\n        return data\r\n    }\r\n\r\n    //* update reminder\r\n    const fetchTask = async (id) => {\r\n        //* URL dari JSON SERVER\r\n        const url = `http://localhost:5000/TUGAS/${id}`\r\n        const res = await fetch(url)\r\n        const data = await res.json()\r\n\r\n        return data\r\n    }\r\n\r\n\r\n    //*add task\r\n\r\n    const addTask = async (x) => {\r\n        //* URL dari JSON SERVER\r\n\r\n        const url = `http://localhost:5000/TUGAS`\r\n\r\n        const res = await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(x)\r\n        })\r\n\r\n        const baru = await res.json()\r\n\r\n        setTask([...tasks, baru])\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    //*delete task\r\n\r\n    const deleteTask = async (id) => {\r\n\r\n        const url = `http://localhost:5000/TUGAS/${id}`\r\n\r\n        await fetch(url, {\r\n            method: 'DELETE'\r\n        })\r\n\r\n        //* menampilan yang id nya tidak sama\r\n        setTask(tasks.filter(x => x.id !== id))\r\n    }\r\n\r\n    //* Toggle Reminder\r\n    const toggleReminder = async (id) => {\r\n\r\n        const toggle = await fetchTask(id)\r\n        const updated = { ...toggle, reminder: !toggle.reminder }\r\n        const url = `http://localhost:5000/TUGAS/${id}`\r\n\r\n        const res = await fetch(url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify(updated)\r\n        })\r\n\r\n        const data = await res.json()\r\n\r\n        setTask(tasks.map(task =>\r\n            task.id === id ? { ...task, reminder: data.reminder } : task))\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"container\">\r\n\r\n                <Header\r\n                    //* onAdd is prop \r\n                    onAdd={() => setShow(!showAdd)} lihat={showAdd}\r\n                />\r\n\r\n                <Route path='/TaskTrackerReact/' exact render={(props) => (\r\n                    <>\r\n                        {\r\n                            //* if showAdd true then show\r\n                            showAdd && <Add tambah={addTask} />\r\n                        }\r\n                        {/* task and onDelete is a props */}\r\n                        {tasks.length > 0 ?\r\n                            (<Tasks tasks={tasks} onDelete={deleteTask}\r\n                                onToggle={toggleReminder} />) : (' No Task to show')}\r\n\r\n                    </>\r\n                )} />\r\n\r\n                <Route path='/about' component={About} />\r\n                <Footer />\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}